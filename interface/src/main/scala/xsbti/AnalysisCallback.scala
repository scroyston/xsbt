package xsbti

import api.Source
import java.io.File

trait AnalysisCallback {
  /** Called before the source at the given location is processed. */
  def beginSource(source: File): Unit
  /** Called to indicate that the source file <code>source</code> depends on the source file
    * <code>dependsOn</code>.  Note that only source files included in the current compilation will
    * passed to this method.  Dependencies on classes generated by sources not in the current compilation will
    * be passed as class dependencies to the classDependency method. */
  def sourceDependency(dependsOn: File, source: File): Unit
  /** Called to indicate that the source file <code>source</code> depends on the top-level
    * class named <code>name</code> from class or jar file <code>binary</code>. */
  def binaryDependency(binary: File, name: String, source: File): Unit
  /** Called to indicate that the source file <code>source</code> produces a class file at
    * <code>module</code>. */
  def generatedClass(source: File, module: File): Unit
  /** Called after the source at the given location has been processed. */
  def endSource(sourcePath: File): Unit
  /** Called when the public API of a source file is extracted. */
  def api(sourceFile: File, source: Source): Unit
}